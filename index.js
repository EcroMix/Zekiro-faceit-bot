const TelegramBot = require('node-telegram-bot-api');
const express = require('express');

const app = express();
const port = process.env.PORT || 3000;

app.get('/', (req, res) => {
  res.send('ü§ñ Zekiro Faceit Bot is running!');
});

app.listen(port, () => {
  console.log(`üöÄ Server running on port ${port}`);
});

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤ –ø–∞–º—è—Ç–∏
const fs = require('fs');
let users = {};
let bans = {};
let admins = new Set();

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
function loadData() {
  try {
    if (fs.existsSync('data.json')) {
      const data = JSON.parse(fs.readFileSync('data.json', 'utf8'));
      users = data.users || {};
      bans = data.bans || {};
      admins = new Set(data.admins || []);
    }
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const adminIds = process.env.ADMIN_IDS ? process.env.ADMIN_IDS.split(',') : [];
    adminIds.forEach(id => admins.add(id.trim()));
  } catch (error) {
    console.log('–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö');
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function saveData() {
  try {
    const data = {
      users: users,
      bans: bans,
      admins: Array.from(admins)
    };
    fs.writeFileSync('data.json', JSON.stringify(data, null, 2));
  } catch (error) {
    console.log('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
loadData();

// –ü—Ä–æ–≤–µ—Ä–∫–∏
function isValidNickname(nickname) {
  return /^[a-zA-Z0-9_]{3,20}$/.test(nickname);
}

function isValidGameId(id) {
  return /^\d{8,9}$/.test(id);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function isAdmin(chatId) {
  return admins.has(chatId.toString());
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–Ω–∞
function isBanned(chatId) {
  const banInfo = bans[chatId];
  if (!banInfo) return false;
  
  if (banInfo.permanent) return true;
  if (banInfo.until && Date.now() < banInfo.until) return true;
  
  // –ï—Å–ª–∏ –±–∞–Ω –∏—Å—Ç–µ–∫, —É–¥–∞–ª—è–µ–º –µ–≥–æ
  delete bans[chatId];
  saveData();
  return false;
}

// –ü–æ–ª—É—á–∏—Ç—å –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –±–∞–Ω–∞
function getBanTimeLeft(until) {
  if (!until) return '–Ω–∞–≤—Å–µ–≥–¥–∞';
  
  const timeLeft = until - Date.now();
  if (timeLeft <= 0) return '–∏—Å—Ç–µ–∫';
  
  const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
  const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
  
  if (days > 0) return `${days}–¥ ${hours}—á`;
  if (hours > 0) return `${hours}—á ${minutes}–º`;
  return `${minutes} –º–∏–Ω—É—Ç`;
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
function showMainMenu(chatId, username) {
  if (isBanned(chatId)) {
    const banInfo = bans[chatId];
    const timeLeft = getBanTimeLeft(banInfo.until);
    const message = banInfo.permanent 
      ? '‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.'
      : `‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω. –†–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑ ${timeLeft}.`;
    return bot.sendMessage(chatId, message);
  }

  const menuOptions = {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üéÆ –ù–∞–π—Ç–∏ –º–∞—Ç—á', callback_data: 'find_match' },
          { text: 'üìä –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'profile' }
        ],
        [
          { text: 'üèÜ –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤', callback_data: 'rating' },
          { text: 'üë• –î—Ä—É–∑—å—è', callback_data: 'friends' }
        ],
        [
          { text: 'üìã –ö–æ–º–∞–Ω–¥—ã', callback_data: 'commands' },
          { text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' }
        ]
      ]
    }
  };
  
  bot.sendMessage(chatId, `üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${username}!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`, menuOptions);
}

// –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
function showAdminPanel(chatId) {
  const adminMenu = {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data: 'admin_users' },
          { text: 'üö´ –ó–∞–±–∞–Ω–∏—Ç—å', callback_data: 'admin_ban' }
        ],
        [
          { text: '‚úÖ –†–∞–∑–±–∞–Ω–∏—Ç—å', callback_data: 'admin_unban' },
          { text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–Ω–æ–≤', callback_data: 'admin_ban_stats' }
        ],
        [
          { text: 'üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞', callback_data: 'admin_add' },
          { text: 'üëë –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞', callback_data: 'admin_remove' }
        ],
        [
          { text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_menu' }
        ]
      ]
    }
  };
  
  bot.sendMessage(chatId, '‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', adminMenu);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (callbackQuery) => {
  const msg = callbackQuery.message;
  const chatId = msg.chat.id;
  const data = callbackQuery.data;

  if (isBanned(chatId)) {
    const banInfo = bans[chatId];
    const timeLeft = getBanTimeLeft(banInfo.until);
    const message = banInfo.permanent 
      ? '‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.'
      : `‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω. –†–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑ ${timeLeft}.`;
    return bot.answerCallbackQuery(callbackQuery.id, { text: message });
  }

  bot.answerCallbackQuery(callbackQuery.id);

  const user = users[chatId];
  if (!user || user.state !== 'completed') return;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω-–∫–Ω–æ–ø–æ–∫
  if (data.startsWith('admin_')) {
    if (!isAdmin(chatId)) {
      return bot.sendMessage(chatId, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
    }
    
    switch(data) {
      case 'admin_users':
        showUserList(chatId);
        break;
      case 'admin_ban':
        bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ä–æ–∫ –±–∞–Ω–∞:\n–ü—Ä–∏–º–µ—Ä: 123456789 7d (7 –¥–Ω–µ–π)\n–ò–ª–∏: 123456789 permanent (–Ω–∞–≤—Å–µ–≥–¥–∞)');
        users[chatId].adminAction = 'ban';
        break;
      case 'admin_unban':
        bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:');
        users[chatId].adminAction = 'unban';
        break;
      case 'admin_ban_stats':
        showBanStats(chatId);
        break;
      case 'admin_add':
        bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω—ã:');
        users[chatId].adminAction = 'add_admin';
        break;
      case 'admin_remove':
        bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω–æ–≤:');
        users[chatId].adminAction = 'remove_admin';
        break;
    }
    return;
  }

  // –û–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
  switch(data) {
    case 'find_match':
      bot.sendMessage(chatId, 'üîç –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–∞—Ç—á...');
      break;
    case 'profile':
      bot.sendMessage(chatId, `üìä –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\nüéÆ Nickname: ${user.gameNickname}\nüÜî Game ID: ${user.gameId}\nüë• –î—Ä—É–∑–µ–π: ${user.friends.length}`);
      break;
    case 'rating':
      showRating(chatId);
      break;
    case 'friends':
      showFriendsMenu(chatId);
      break;
    case 'commands':
      const commandsText = isAdmin(chatId) 
        ? 'üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n/admin - –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å\n/ban ID —Å—Ä–æ–∫ - –±–∞–Ω\n/unban ID - —Ä–∞–∑–±–∞–Ω\n/addadmin ID - –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞\n/removeadmin ID - —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞'
        : 'üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n/profile - –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å';
      bot.sendMessage(chatId, commandsText);
      break;
    case 'help':
      bot.sendMessage(chatId, '‚ùì –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É');
      break;
    case 'back_to_menu':
      showMainMenu(chatId, user.telegramUsername);
      break;
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username || msg.from.first_name;
  
  if (isBanned(chatId)) {
    const banInfo = bans[chatId];
    const timeLeft = getBanTimeLeft(banInfo.until);
    const message = banInfo.permanent 
      ? '‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.'
      : `‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω. –†–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑ ${timeLeft}.`;
    return bot.sendMessage(chatId, message);
  }
  
  if (users[chatId] && users[chatId].state === 'completed') {
    showMainMenu(chatId, username);
  } else {
    users[chatId] = {
      telegramUsername: username,
      gameNickname: null,
      gameId: null,
      state: 'awaiting_nickname',
      friends: []
    };
    saveData();
    
    bot.sendMessage(chatId, `üéÆ –ü—Ä–∏–≤–µ—Ç, ${username}!\n\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π nickname:\n‚Ä¢ –¢–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã\n‚Ä¢ –¶–∏—Ñ—Ä—ã –∏ —Å–∏–º–≤–æ–ª _\n‚Ä¢ –û—Ç 3 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤`);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /admin
bot.onText(/\/admin/, (msg) => {
  const chatId = msg.chat.id;
  
  if (!isAdmin(chatId)) {
    return bot.sendMessage(chatId, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
  }
  
  showAdminPanel(chatId);
});

// –ö–æ–º–∞–Ω–¥–∞ /ban
bot.onText(/\/ban (\d+) (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userIdToBan = match[1];
  const duration = match[2].toLowerCase();
  
  if (!isAdmin(chatId)) {
    return bot.sendMessage(chatId, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
  }
  
  if (isBanned(userIdToBan)) {
    return bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
  }
  
  let banInfo = {};
  if (duration === 'permanent') {
    banInfo = { permanent: true, bannedAt: Date.now(), bannedBy: chatId };
  } else {
    const timeMatch = duration.match(/(\d+)([dhm])/);
    if (!timeMatch) {
      return bot.sendMessage(chatId, '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ä–æ–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: 7d (–¥–Ω–∏), 24h (—á–∞—Å—ã), 60m (–º–∏–Ω—É—Ç—ã) –∏–ª–∏ permanent');
    }
    
    const amount = parseInt(timeMatch[1]);
    const unit = timeMatch[2];
    
    let milliseconds = amount * 60 * 1000; // –º–∏–Ω—É—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (unit === 'h') milliseconds = amount * 60 * 60 * 1000;
    if (unit === 'd') milliseconds = amount * 24 * 60 * 60 * 1000;
    
    banInfo = { 
      until: Date.now() + milliseconds,
      bannedAt: Date.now(),
      bannedBy: chatId
    };
  }
  
  bans[userIdToBan] = banInfo;
  saveData();
  
  const timeLeft = getBanTimeLeft(banInfo.until);
  const message = banInfo.permanent 
    ? '‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.'
    : `‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω. –†–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑ ${timeLeft}.`;
  
  bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userIdToBan} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ${banInfo.permanent ? '–Ω–∞–≤—Å–µ–≥–¥–∞' : `–Ω–∞ ${timeLeft}`}`);
  bot.sendMessage(userIdToBan, message);
});

// –ö–æ–º–∞–Ω–¥–∞ /unban
bot.onText(/\/unban (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userIdToUnban = match[1];
  
  if (!isAdmin(chatId)) {
    return bot.sendMessage(chatId, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
  }
  
  if (!isBanned(userIdToUnban)) {
    return bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
  }
  
  delete bans[userIdToUnban];
  saveData();
  
  bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userIdToUnban} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
  bot.sendMessage(userIdToUnban, '‚úÖ –í—ã –±—ã–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!');
});

// –ö–æ–º–∞–Ω–¥–∞ /addadmin
bot.onText(/\/addadmin (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userIdToAdd = match[1];
  
  if (!isAdmin(chatId)) {
    return bot.sendMessage(chatId, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
  }
  
  if (admins.has(userIdToAdd)) {
    return bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');
  }
  
  admins.add(userIdToAdd);
  saveData();
  
  bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userIdToAdd} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã`);
  bot.sendMessage(userIdToAdd, 'üéâ –í—ã –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!');
});

// –ö–æ–º–∞–Ω–¥–∞ /removeadmin
bot.onText(/\/removeadmin (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userIdToRemove = match[1];
  
  if (!isAdmin(chatId)) {
    return bot.sendMessage(chatId, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
  }
  
  if (!admins.has(userIdToRemove)) {
    return bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');
  }
  
  admins.delete(userIdToRemove);
  saveData();
  
  bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userIdToRemove} —É–¥–∞–ª–µ–Ω –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤`);
  bot.sendMessage(userIdToRemove, '‚ÑπÔ∏è –í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text?.trim();
  
  if (!text || text.startsWith('/')) return;
  
  if (isBanned(chatId)) {
    const banInfo = bans[chatId];
    const timeLeft = getBanTimeLeft(banInfo.until);
    const message = banInfo.permanent 
      ? '‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.'
      : `‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω. –†–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑ ${timeLeft}.`;
    return bot.sendMessage(chatId, message);
  }
  
  const user = users[chatId];
  if (!user) return;
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω-–¥–µ–π—Å—Ç–≤–∏–π
  if (user.adminAction && isAdmin(chatId)) {
    handleAdminActions(msg, user);
    return;
  }
  
  if (user.state === 'completed') {
    if (user.friendAction) {
      handleFriendActions(msg);
    } else {
      bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é üì±');
    }
  } else {
    handleRegistration(msg);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω-–¥–µ–π—Å—Ç–≤–∏–π
function handleAdminActions(msg, user) {
  const chatId = msg.chat.id;
  const text = msg.text;
  
  switch(user.adminAction) {
    case 'ban':
      const banParts = text.split(' ');
      const banUserId = banParts[0];
      const banDuration = banParts.slice(1).join(' ');
      
      if (isBanned(banUserId)) {
        bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
      } else {
        let banInfo = {};
        if (banDuration === 'permanent') {
          banInfo = { permanent: true, bannedAt: Date.now(), bannedBy: chatId };
        } else {
          const timeMatch = banDuration.match(/(\d+)([dhm])/);
          if (!timeMatch) {
            bot.sendMessage(chatId, '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ä–æ–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: 7d, 24h, 60m –∏–ª–∏ permanent');
            return;
          }
          
          const amount = parseInt(timeMatch[1]);
          const unit = timeMatch[2];
          
          let milliseconds = amount * 60 * 1000;
          if (unit === 'h') milliseconds = amount * 60 * 60 * 1000;
          if (unit === 'd') milliseconds = amount * 24 * 60 * 60 * 1000;
          
          banInfo = { 
            until: Date.now() + milliseconds,
            bannedAt: Date.now(),
            bannedBy: chatId
          };
        }
        
        bans[banUserId] = banInfo;
        saveData();
        
        const timeLeft = getBanTimeLeft(banInfo.until);
        const message = banInfo.permanent 
          ? '‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.'
          : `‚ùå –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞–Ω. –†–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑ ${timeLeft}.`;
        
        bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${banUserId} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ${banInfo.permanent ? '–Ω–∞–≤—Å–µ–≥–¥–∞' : `–Ω–∞ ${timeLeft}`}`);
        bot.sendMessage(banUserId, message);
      }
      break;
      
    case 'unban':
      if (!isBanned(text)) {
        bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
      } else {
        delete bans[text];
        saveData();
        bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${text} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
        bot.sendMessage(text, '‚úÖ –í—ã –±—ã–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!');
      }
      break;
      
    case 'add_admin':
      if (admins.has(text)) {
        bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');
      } else {
        admins.add(text);
        saveData();
        bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${text} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã`);
        bot.sendMessage(text, 'üéâ –í—ã –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!');
      }
      break;
      
    case 'remove_admin':
      if (!admins.has(text)) {
        bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');
      } else {
        admins.delete(text);
        saveData();
        bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${text} —É–¥–∞–ª–µ–Ω –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤`);
        bot.sendMessage(text, '‚ÑπÔ∏è –í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞.');
      }
      break;
  }
  
  user.adminAction = null;
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–Ω–æ–≤
function showBanStats(chatId) {
  const activeBans = Object.entries(bans).filter(([_, ban]) => 
    ban.permanent || (ban.until && Date.now() < ban.until)
  );
  
  const permanentBans = activeBans.filter(([_, ban]) => ban.permanent).length;
  const tempBans = activeBans.length - permanentBans;
  
  let statsText = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–Ω–æ–≤:\n\n` +
    `üö´ –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–∞–Ω–æ–≤: ${activeBans.length}\n` +
    `üîí –ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã—Ö: ${permanentBans}\n` +
    `‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã—Ö: ${tempBans}\n\n`;
  
  if (activeBans.length > 0) {
    statsText += 'üìã –ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n';
    activeBans.forEach(([userId, ban], index) => {
      const timeLeft = getBanTimeLeft(ban.until);
      statsText += `${index + 1}. ID: ${userId} - ${ban.permanent ? '–ù–∞–≤—Å–µ–≥–¥–∞' : timeLeft}\n`;
    });
  }
  
  bot.sendMessage(chatId, statsText);
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (showUserList, showFriendsMenu, handleFriendActions, handleRegistration) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å —Å–∏—Å—Ç–µ–º–æ–π –±–∞–Ω–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –∞–¥–º–∏–Ω–∫–æ–π –ø–æ ID!');
