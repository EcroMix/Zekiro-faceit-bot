import { supabase } from "../config/database.js";

export default function registrationHandler(bot) {
  // /start -- —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–∞–ø–¥–µ–π—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è + –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  bot.onText(/^\/start$/, async (msg) => {
    const chatId = msg.chat.id;
    const username = (msg.from?.username || "").trim() || `user_${chatId}`;

    try {
      // upsert –ø–æ telegram_id (–µ—Å–ª–∏ –µ—Å—Ç—å -- –æ–±–Ω–æ–≤–∏–º username)
      const { error } = await supabase
        .from("users")
        .upsert({ telegram_id: chatId, username }, { onConflict: "telegram_id" });

      if (error) throw error;

      // –ª–æ–≥
      await supabase.from("logs").insert({ action: "user_start", user_id: chatId }).catch(()=>{});

      // –º–µ–Ω—é
      const kb = {
        reply_markup: {
          keyboard: [
            [{ text: "üîé –õ–æ–±–±–∏ /lobbies" }, { text: "‚ûï –°–æ–∑–¥–∞—Ç—å –ª–æ–±–±–∏ /createlobby" }],
            [{ text: "üéÆ –ú–∞—Ç—á —Å @–Ω–∏–∫ /match" }, { text: "üé´ –¢–∏–∫–µ—Ç /ticket" }],
          ],
          resize_keyboard: true,
        },
      };

      bot.sendMessage(
        chatId,
        `–ü—Ä–∏–≤–µ—Ç, ${username}! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ‚úÖ\n\n–ö–æ–º–∞–Ω–¥—ã:
- /lobbies -- —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ª–æ–±–±–∏
- /createlobby <–Ω–∞–∑–≤–∞–Ω–∏–µ> -- —Å–æ–∑–¥–∞—Ç—å –ª–æ–±–±–∏
- /match @–Ω–∏–∫ -- —Å–æ–∑–¥–∞—Ç—å –º–∞—Ç—á —Å –∏–≥—Ä–æ–∫–æ–º
- /ticket <—Ç–µ–º–∞> -- —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç\n\n–ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`,
        kb
      );
    } catch (e) {
      console.error("registration /start error:", e);
      bot.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  });
}